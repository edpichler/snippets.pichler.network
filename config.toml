baseURL = "https://snippets.pichler.network/"
languageCode = "en"
title = "Snippets"
theme = "book" #https://themes.gohugo.io/themes/hugo-book/

[params]
  author = "Eduardo Ivan Pichler"
  description = "Sofware Engineer in Stockholm"
#   favicon = "favicon.ico"  # path to a .ico to use as favicon
#   logo = ""  # url or path to a logo to put in the header
#   [params.footer]
    # text = "By Olivier Roques"
    # url = "https://github.com/ojroques/hugo-researcher"
#   [params.style]  # appearance options (can be omitted)
#     fontFamily = "Inconsolata"
#     pageWidth = "750px"
#     avatarSize = "90px"
#     colorBlack = "#222222"
#     colorRed = "#dc3545"
  # [[params.socialIcons]]
  #   icon = "fab fa-twitter"
  #   title = "Twitter"
  #   url = "https://twitter.com/edupichler"
  # [[params.socialIcons]]
  #   icon = "fas fa-envelope"
  #   title = "E-mail"
  #   url = "mailto:edupichler@blumenau.anonaddy.com"
  
  # Set source repository location.
  # Used for 'Last Modified' and 'Edit this page' links.
  BookRepo = 'https://github.com/edpichler/snippets.pichler.network'
  
  # (Optional, default docs) Specify section of content to render as menu
  # You can also set value to "*" to render all sections to menu
  BookSection = 'docs'

[deployment]
# By default, files are uploaded in an arbitrary order.
# Files that match the regular expressions in the "Order" list
# will be uploaded first, in the listed order.
order = [".jpg$", ".gif$"]


[[deployment.targets]]
# An arbitrary name for this target.
name = "snippets.pichler.network S3"
# The Go Cloud Development Kit URL to deploy to. Examples:
# GCS; see https://gocloud.dev/howto/blob/#gcs
# URL = "gs://<Bucket Name>"

# S3; see https://gocloud.dev/howto/blob/#s3
# For S3-compatible endpoints, see https://gocloud.dev/howto/blob/#s3-compatible
URL = "s3://static-hugo-sites-pichler?region=eu-north-1&prefix=snippets.pichler.network/"

# Azure Blob Storage; see https://gocloud.dev/howto/blob/#azure
# URL = "azblob://$web"

# You can use a "prefix=" query parameter to target a subfolder of the bucket:
# URL = "gs://<Bucket Name>?prefix=a/subfolder/"

# If you are using a CloudFront CDN, deploy will invalidate the cache as needed.
# cloudFrontDistributionID = <ID>

# Optionally, you can include or exclude specific files.
# See https://godoc.org/github.com/gobwas/glob#Glob for the glob pattern syntax.
# If non-empty, the pattern is matched against the local path.
# All paths are matched against in their filepath.ToSlash form.
# If exclude is non-empty, and a local or remote file's path matches it, that file is not synced.
# If include is non-empty, and a local or remote file's path does not match it, that file is not synced.
# As a result, local files that don't pass the include/exclude filters are not uploaded to remote,
# and remote files that don't pass the include/exclude filters are not deleted.
# include = "**.html" # would only include files with ".html" suffix
# exclude = "**.{jpg, png}" # would exclude files with ".jpg" or ".png" suffix


# [[deployment.matchers]] configure behavior for files that match the Pattern.
# See https://golang.org/pkg/regexp/syntax/ for pattern syntax.
# Pattern searching is stopped on first match.

# Samples:

[[deployment.matchers]]
# Cache static assets for 1 year.
pattern = "^.+\\.(js|css|svg|ttf)$"
cacheControl = "max-age=31536000, no-transform, public"
gzip = true

[[deployment.matchers]]
pattern = "^.+\\.(png|jpg)$"
cacheControl = "max-age=31536000, no-transform, public"
gzip = false

[[deployment.matchers]]
# Set custom content type for /sitemap.xml
pattern = "^sitemap\\.xml$"
contentType = "application/xml"
gzip = true

[[deployment.matchers]]
pattern = "^.+\\.(html|xml|json)$"
gzip = true

# [markup]
#   [markup.goldmark]
#     [markup.goldmark.renderer]
#       unsafe = true

# (Optional) Set Google Analytics if you use it to track your website.
# Always put it on the top of the configuration file, otherwise it won't work
googleAnalytics = "G-T66GW5FE6E"

# (Optional) Set this to true to enable 'Last Modified by' date and git author
#  information on 'doc' type pages.
enableGitInfo = true

